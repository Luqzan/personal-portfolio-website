// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Project {
  id Int @id @default(autoincrement())
  title String
  type ProjectType
  role ProjectRole
  status ProjectStatus
  technologies TechnologiesOnProjects[]
  liveLink String?
  githubLink String?
  downloadLink String?
  pictures ProjectPictures[]
  startDate DateTime @db.Date
  completeDate DateTime? @db.Date
  createdDate DateTime @default(now())
  updatedDate DateTime?
  deletedDate DateTime?
}

enum ProjectType {
  WebApplication @map("Web Application")
  MobileApplication @map("Mobile Application")
  Website
}

enum ProjectRole {
  FullStackDeveloper @map("Full-Stack Developer")
  FrontEndDeveloper @map("Front-End Developer")
  BackEndDeveloper @map("Back-End Developer")
  Designer
}

enum ProjectStatus {
  Ongoing
  Completed
  Abandoned
}

model ProjectPictures {
  id Int @id @default(autoincrement())
  project Project @relation(fields: [projectId], references: [id])
  projectId Int
  src String
  alt String
}

model Technology {
  id Int @id @default(autoincrement())
  name String
  label String
  src String
  color String
  projects TechnologiesOnProjects[]
  createdDate DateTime @default(now())
  updatedDate DateTime?
  deletedDate DateTime?
}

model TechnologiesOnProjects {
  project Project @relation(fields: [projectId], references: [id])
  projectId Int
  technology Technology @relation(fields: [technologyId], references: [id])
  technologyId Int

  @@id([projectId, technologyId])
}